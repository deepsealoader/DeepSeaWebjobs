package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Generator {

	/**
     * randomDateRange: return a random date in a range
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} java.util.Date(newDate()) a: The base date
     * {param} int(10) b: The number of days
     * {param} String("yyyyMMdd") format: The format
     * 
     * {example} randomDateRange(new java.util.Date(), 10, "yyyyMMdd") # 20200502.
     */
    public static String randomDateRange(java.util.Date a, int b, String format) {
    	return TalendDate.formatDate(format, TalendDate.addDate(a, (int)(Math.random() * (double) b), "dd"));
    }
    
    /**
     * randomIntRange: return a random number in a range
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int(0) a: The min of the range
     * {param} int(10) b: The max of the range
     * 
     * {example} randomIntRange(0, 10) # 5.
     */
    public static String randomIntRange(int a, int b) {
    	return String.valueOf((int)(Math.random() * (double) (b - a) + (double) a));
    }
    
    /**
     * randomIntPadding: return a random number with a padding
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int(8) n: The min of the range
     * 
     * {example} randomIntPadding(8) # 12345678.
     */
    public static String randomIntPadding(int n) {
    	String s = "";
    	for (int i = 0; i < n; i++) {
    		s += String.valueOf((int)(Math.random() * 10));
    	}
    	return s;
    }
}
